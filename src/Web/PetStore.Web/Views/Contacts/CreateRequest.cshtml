@using Microsoft.AspNetCore.Identity;

@using PetStore.Common;
@using PetStore.Data.Models.Common;
@using PetStore.Data.Models;
@using PetStore.Web.ViewModels.Requests;

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@model CreateRequestViewModel

@{
    this.ViewData["Title"] = "Send a request";
    string userEmailAdress = "Your email...";

    if (this.User.Identity.IsAuthenticated && !this.User.IsInRole(GlobalConstants.AdministratorRoleName))
    {
        ApplicationUser applicationUser = (ApplicationUser)await this.UserManager.GetUserAsync(this.User);
        userEmailAdress = applicationUser.Email.ToString();
    }
}

@if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
{
    <h1 style="text-align:center; font-weight: bold; font-style: italic">Administrators can't send a request.</h1>
}
else
{
    <h1 class="text-center"><strong>@ViewData["Title"]</strong></h1>
    <div class="row" style="backdrop-filter: blur(10px); border: 2px solid; border-color: white; border-radius: 15px">
        <div class="col-md-6 mx-auto mt-4 mb-4">
            <form asp-action="CreateRequest">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <Row>
                    <Column class="mb-4" style="float:left">
                            <input id="Title" name="Title" placeholder="Title..." class="form-control" style="width: 300px" type="text" minlength="@RequestValidationConstants.TitleMinLength" maxlength="@RequestValidationConstants.TitleMaxLength" required />
                    </Column>
                    <Column class="mb-4" style="float: right;">
                        @if (this.User.Identity.IsAuthenticated && !this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                        {
                            <input id="SenderEmail" name="SenderEmail" value="@userEmailAdress" class="form-control" style="width: 300px" type="email" required />
                        }
                        else
                        {
                            <input id="SenderEmail" name="SenderEmail" placeholder="@userEmailAdress" class="form-control" style="width: 300px" type="email" required />
                        }
                    </Column>
                </Row>
                <div class="mt-4 mb-4">
                    <textarea class="form-control" cols="20" rows="10" id="Message" name="Message" placeholder="Write you request here..." type="text" minlength="@RequestValidationConstants.MessageMinLength" maxlength="@RequestValidationConstants.MessageMaxLength" required></textarea>
                </div>
                <div class="d-grid gap-2 col-6 mx-auto">
                    <input type="submit" value="Send" class="btn btn-success" />
                    <input class="btn btn-dark mb-3" value="Back" onclick="history.back()">
                </div>
            </form>
        </div>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
